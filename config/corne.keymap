/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include <zmk-helpers/key-labels/42.h>

#define DEFAULT_LAYER 0
#define SYMBOL_LAYER 1
#define FN_LAYER 2
#define NAV_LAYER 3
#define BT_LAYER 4

#define LEFT_KEYS LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5
#define RIGHT_KEYS RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5
#define THUMB_KEYS LH2 LH1 LH0 RH0 RH1 RH2

/ {
        behaviors {
                hml: home_row_mod_left {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        require-prior-idle-ms = <150>;
                        tapping-term-ms = <280>;
                        quick-tap-ms = <175>;
                        bindings = <&kp>, <&kp>;
                        hold-trigger-key-positions = <RIGHT_KEYS THUMB_KEYS>; // List of keys on the right side of the keyboard
                        hold-trigger-on-release;
                };
                hmr: home_row_mod_right {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        require-prior-idle-ms = <150>;
                        tapping-term-ms = <280>;
                        quick-tap-ms = <175>;
                        bindings = <&kp>, <&kp>;
                        hold-trigger-key-positions = <LEFT_KEYS THUMB_KEYS>; // List of keys on the left side of the keyboard
                        hold-trigger-on-release;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | GRAVE |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                     | GUI | LWR | SPC |   | ENT | SPC  | ALT |
                        bindings = <
   &kp GRAVE &kp Q        &kp W       &kp E            &kp R        &kp T                &kp Y     &kp U        &kp I           &kp O         &kp P           &lt BT_LAYER BSLH
   &kp ESC   &kp A        &kp S       &kp D            &kp F        &kp G                &kp H     &kp J        &kp K           &kp L         &kp SEMI        &kp SQT
   &kp LSHFT &hml LCTRL Z &hml LALT X &hml LGUI C      &hml LSHFT V &kp B                &kp N     &hmr RSHFT M &hmr RGUI COMMA &hmr RALT DOT &hmr RCTRL FSLH &mo FN_LAYER
                          &kp BSPC    &mo SYMBOL_LAYER &kp TAB      &lt NAV_LAYER RET    &kp SPACE &kp RSHFT
                        >;
                };

                symbol_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TILDE  &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT      &kp CARET &kp AMPS &kp ASTRK &kp LPAR  &kp RPAR &kp UNDER
   &kp GRAVE  &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6    &kp N7   &kp N8    &kp N9    &kp N0   &kp MINUS
   &trans     &kp PLUS     &kp EQUAL    &kp LBRC     &kp LBKT     &none          &none     &kp RBKT &kp RBRC  &trans    &trans   &trans
                                        &trans       &trans       &trans         &trans    &trans   &trans
                        >;
                };

                fn_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
&trans    &kp F1   &kp F2 &kp F3   &kp F4   &kp F5      &kp F6    &kp F7    &kp F8    &kp F9   &kp F10  &kp F11
&none     &trans   &trans &trans   &trans   &trans      &trans    &trans    &trans    &trans   &trans   &kp F12
&trans    &trans   &trans &trans   &trans   &trans      &trans    &trans    &trans    &trans   &trans   &trans
                          &trans   &trans   &trans      &trans    &trans    &trans
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
&trans    &trans   &trans &trans   &trans   &trans      &trans    &trans    &trans    &trans    &trans   &trans
&trans    &trans   &trans &trans   &trans   &trans      &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans   &trans
&trans    &trans   &trans &trans   &trans   &trans      &trans    &trans    &trans    &trans    &trans   &trans
                          &trans   &trans   &trans      &trans    &trans    &trans
                        >;
                };

                bt_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &trans   &trans      &trans    &trans    &trans    &trans    &trans   &trans
&trans     &trans       &trans       &trans       &trans   &trans      &trans    &trans    &trans    &trans    &trans   &trans
&trans     &trans       &trans       &trans       &trans   &trans      &trans    &trans    &trans    &trans    &trans   &trans
                                     &trans       &trans   &trans      &trans    &trans    &trans
                        >;
                };
        };
};
